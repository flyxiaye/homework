/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package binarytree;

import java.util.Enumeration;
import java.util.NoSuchElementException;
import java.util.Vector;
import javax.swing.JTree;
import javax.swing.tree.DefaultMutableTreeNode;
import javax.swing.tree.DefaultTreeModel;
import javax.swing.tree.TreeModel;
import javax.swing.tree.TreeNode;
import javax.swing.tree.TreePath;

/**
 *
 * @author ChxxxXL
 */
public class BinTreeFrame extends javax.swing.JFrame {

    /**
     * Creates new form BinTreeFrame
     */
    public BinTreeFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTree1 = null;

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jSplitPane1.setDividerLocation(300);

        jButton1.setText("插入");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("删除");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("查找");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(656, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(114, 114, 114)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(27, 27, 27)
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jButton2)
                .addGap(18, 18, 18)
                .addComponent(jButton3)
                .addContainerGap(176, Short.MAX_VALUE))
        );

        jSplitPane1.setRightComponent(jPanel1);

        jScrollPane2.setViewportView(jTree1);

        jSplitPane1.setLeftComponent(jScrollPane2);

        getContentPane().add(jSplitPane1, java.awt.BorderLayout.LINE_START);
        jSplitPane1.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String str = jTextField1.getText();
        jTextField1.setText("");
        jTextField1.requestFocus();
        if (str.equals("")) {
            return;
        }
        if (jTree1 == null) {
            jTree1 = new JTree(new DefaultMutableTreeNode(str));
            TreePath path = jTree1.getPathForRow(0);
            jTree1.expandPath(path);
            jScrollPane2.setViewportView(jTree1);
            return;
        }
        DefaultTreeModel treeModel = (DefaultTreeModel) jTree1.getModel();
        DefaultMutableTreeNode root = (DefaultMutableTreeNode) treeModel.getRoot();
        DefaultMutableTreeNode node = root;
        double num = Double.parseDouble(str);
        while (true) {
            double num2 = Double.parseDouble(node.toString());
            if (node.getChildCount() == 2) {
                if (num < num2) {
                    node = (DefaultMutableTreeNode) node.getFirstChild();
                } else {
                    node = (DefaultMutableTreeNode) node.getLastChild();
                }
            } else if (node.getChildCount() == 1) {
                DefaultMutableTreeNode childNode = (DefaultMutableTreeNode) node.getChildAt(0);
                double childNum = Double.parseDouble(childNode.toString());
                DefaultMutableTreeNode newNode = new DefaultMutableTreeNode(str);
                if (num < num2 && childNum < num2) {
                    node = (DefaultMutableTreeNode) node.getFirstChild();
                } else if (num < num2 && childNum >= num2) {
                    treeModel.insertNodeInto(newNode, node, 0);
                    jTree1.scrollPathToVisible(new TreePath(newNode.getPath()));
                    break;
                } else if (num >= num2 && childNum < num2) {
                    treeModel.insertNodeInto(newNode, node, 1);
                    jTree1.scrollPathToVisible(new TreePath(newNode.getPath()));
                    break;
                } else if (num >= num2 && childNum >= num2) {
                    node = (DefaultMutableTreeNode) node.getLastChild();
                }
            } else {
                DefaultMutableTreeNode newNode = new DefaultMutableTreeNode(str);
                treeModel.insertNodeInto(newNode, node, 0);
                jTree1.scrollPathToVisible(new TreePath(newNode.getPath()));
                break;
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        String str = jTextField1.getText();
        jTextField1.setText("");
        jTextField1.requestFocus();
        DefaultTreeModel treeModel = (DefaultTreeModel) jTree1.getModel();
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) treeModel.getRoot();
        DefaultMutableTreeNode parent = null;
        while(true){
            if (node.toString().equals(str)){   //delete node
                parent = (DefaultMutableTreeNode)node.getParent();
                deleteNode(node);
                break;
            }
            else if (Double.valueOf(str).compareTo(Double.valueOf(node.toString())) < 0)
                node = (DefaultMutableTreeNode)node.getFirstChild();
            else node = (DefaultMutableTreeNode)node.getLastChild();
        }
        treeModel.reload();
        jTree1.scrollPathToVisible(new TreePath(parent.getPath()));
    }//GEN-LAST:event_jButton2ActionPerformed
    private void deleteNode(DefaultMutableTreeNode delNode){
        if (delNode.getChildCount() == 0){
            DefaultMutableTreeNode parent = (DefaultMutableTreeNode)delNode.getParent();
            if (parent != null){
                parent.remove(delNode);
            }
        }
        else if (delNode.getChildCount() == 1){
            DefaultMutableTreeNode parent = (DefaultMutableTreeNode)delNode.getParent();
            DefaultMutableTreeNode child = (DefaultMutableTreeNode)delNode.getFirstChild();
            parent.remove(delNode);
            if (parent.getChildCount() == 1){
                if (Double.valueOf(child.toString()).compareTo(Double.valueOf(parent.getFirstChild().toString())) < 0)
                    parent.insert(child, 0);
                else parent.insert(child, 1);
            }
            else parent.insert(child, 0);
        }
        else if (delNode.getChildCount() == 2){
            DefaultMutableTreeNode parent = (DefaultMutableTreeNode)delNode.getParent();
            DefaultMutableTreeNode child = (DefaultMutableTreeNode)delNode.getFirstChild();
            DefaultMutableTreeNode oldNode = delNode;
            delNode = (DefaultMutableTreeNode)delNode.getLastChild();
            while (delNode.getChildCount() > 0
                    && Double.valueOf(delNode.toString()).compareTo(Double.valueOf(delNode.getFirstChild().toString())) > 0) 
                delNode = (DefaultMutableTreeNode)delNode.getFirstChild();
            jTree1.getModel().valueForPathChanged(new TreePath(oldNode.getPath()), delNode.toString());
            deleteNode(delNode);
        }
    }

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String str = jTextField1.getText();
        jTextField1.setText("");
        jTextField1.requestFocus();
        DefaultTreeModel treeModel = (DefaultTreeModel) jTree1.getModel();
        DefaultMutableTreeNode node = (DefaultMutableTreeNode) treeModel.getRoot();
        Vector treePaths = new Vector<TreePath>();
        try {
            while (true) {
                if (node.toString().equals(str)) {
                    jTree1.scrollPathToVisible(new TreePath(node.getPath()));
                    treePaths.add(new TreePath(node.getPath()));
                }
                if (Double.valueOf(str).compareTo(Double.valueOf(node.toString())) < 0) {
                    node = (DefaultMutableTreeNode) node.getFirstChild();
                } else {
                    node = (DefaultMutableTreeNode) node.getLastChild();
                }
            }
        } catch (NoSuchElementException e) {
        } finally {
            TreePath[] treeP = new TreePath[treePaths.size()];
            treePaths.toArray(treeP);
            jTree1.setSelectionPaths(treeP);
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BinTreeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BinTreeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BinTreeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BinTreeFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BinTreeFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSplitPane jSplitPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTree jTree1;
    // End of variables declaration//GEN-END:variables
}
